name: CI

on:
  workflow_dispatch: {}

jobs:
  gate_ipc_in_components:
    name: gate/ipc-in-components
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - run: node scripts/guards/gate-ipc-in-components.mjs

  gate_no_deep_relatives:
    name: gate/no-deep-relatives
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - run: node scripts/guards/gate-no-deep-relatives.mjs

  gate_cross_feature_report:
    name: gate/cross-feature-report
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - run: node scripts/guards/gate-cross-feature-report.mjs

  gate_time_invariants:
    name: gate/time-invariants
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install sqlite3
        run: sudo apt-get update && sudo apt-get install -y sqlite3
      - uses: dtolnay/rust-toolchain@stable
      - name: Build drift-check database from SQL
        run: |
          mkdir -p fixtures/time
          sqlite3 fixtures/time/drift-check.db < fixtures/time/drift-check.sql
          sqlite3 fixtures/time/drift-check.db 'PRAGMA integrity_check;'
      - name: Run drift check
        working-directory: src-tauri
        run: >
          cargo run
          --bin time -- invariants
          --db ../fixtures/time/drift-check.db
          --output drift-report.json
          --pretty
      - name: Upload drift report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: drift-report
          path: src-tauri/drift-report.json

  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
      - run: npm ci
      - run: npm run lint

  unit:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
      - run: npm ci
      - run: npm test

  playwright:
    runs-on: ubuntu-latest
    needs: [lint, unit]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
      - run: npm ci
      - run: npx playwright install --with-deps
      - run: npm run test:e2e
      - run: npm run test:a11y
