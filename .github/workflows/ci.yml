name: CI

on:
  workflow_dispatch: {}

permissions:
  contents: read

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  gate_ipc_in_components:
    name: gate/ipc-in-components
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - run: node scripts/guards/gate-ipc-in-components.mjs

  gate_no_deep_relatives:
    name: gate/no-deep-relatives
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - run: node scripts/guards/gate-no-deep-relatives.mjs

  gate_cross_feature_report:
    name: gate/cross-feature-report
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - run: node scripts/guards/gate-cross-feature-report.mjs

  gate_time_invariants:
    name: gate/time-invariants
    runs-on: ubuntu-latest
    needs: [lint, unit]
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - uses: Swatinem/rust-cache@v2
        with:
          workspaces: |
            src-tauri
      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libgtk-3-dev \
            libwebkit2gtk-4.1-dev \
            libayatana-appindicator3-dev \
            librsvg2-dev \
            patchelf \
            sqlite3
      - name: Build drift-check fixture
        run: |
          set -euxo pipefail
          rm -f fixtures/time/drift-check.db
          sqlite3 fixtures/time/drift-check.db < fixtures/time/drift-check-fixture.sql
      - name: Verify drift-check fixture
        run: sqlite3 fixtures/time/drift-check.db 'PRAGMA integrity_check;'
      - name: Run drift check
        working-directory: src-tauri
        run: >
          cargo run --locked
          --bin time -- invariants
          --db ../fixtures/time/drift-check.db
          --output drift-report.json
          --pretty
      - name: Upload drift report
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: drift-report
          path: src-tauri/drift-report.json

  gate_time_invariants_tests:
    name: gate/time-invariants-tests
    runs-on: ubuntu-latest
    needs: [lint, unit]
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - uses: Swatinem/rust-cache@v2
        with:
          workspaces: |
            src-tauri
      - name: Run invariant scenario tests
        run: |
          set -euxo pipefail
          mkdir -p test-results
          cargo test --locked --manifest-path src-tauri/Cargo.toml --test time_invariants_scenarios -- --nocapture \
            2>&1 | tee test-results/time_invariants_scenarios.log
      - name: Run baseline invariant unit tests
        run: |
          set -euxo pipefail
          mkdir -p test-results
          cargo test --locked --manifest-path src-tauri/Cargo.toml --test time_invariants -- --nocapture \
            2>&1 | tee test-results/time_invariants.log
      - name: Upload invariant logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: time-invariants-logs-${{ runner.os }}
          path: test-results/*.log

  gate_rrule_matrix:
    name: gate/rrule-matrix
    runs-on: ubuntu-latest
    needs: [lint, unit]
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - uses: Swatinem/rust-cache@v2
        with:
          workspaces: |
            src-tauri
      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libgtk-3-dev \
            libwebkit2gtk-4.1-dev \
            libayatana-appindicator3-dev \
            librsvg2-dev \
            patchelf \
            sqlite3
      - name: Run RRULE matrix tests
        run: |
          set -euxo pipefail
          cargo test --locked --manifest-path src-tauri/Cargo.toml --test rrule_matrix -- --nocapture

  gate_time_invariants_tests_macos:
    name: gate/time-invariants-tests (macOS)
    runs-on: macos-latest
    continue-on-error: true
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - uses: Swatinem/rust-cache@v2
        with:
          workspaces: |
            src-tauri
      - name: Run invariant scenario tests
        run: |
          set -euxo pipefail
          mkdir -p test-results
          cargo test --locked --manifest-path src-tauri/Cargo.toml --test time_invariants_scenarios -- --nocapture \
            2>&1 | tee test-results/time_invariants_scenarios.log
      - name: Run baseline invariant unit tests
        run: |
          set -euxo pipefail
          mkdir -p test-results
          cargo test --locked --manifest-path src-tauri/Cargo.toml --test time_invariants -- --nocapture \
            2>&1 | tee test-results/time_invariants.log
      - name: Upload invariant logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: time-invariants-logs-${{ runner.os }}
          path: test-results/*.log

  gate_backfill_bench_smoke:
    name: gate/backfill-bench-smoke
    runs-on: ubuntu-latest
    needs: [lint, unit]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
      - uses: dtolnay/rust-toolchain@stable
      - uses: Swatinem/rust-cache@v2
        with:
          workspaces: |
            src-tauri
      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            build-essential \
            python3 \
            make \
            g++ \
            libgtk-3-dev \
            libwebkit2gtk-4.1-dev \
            libayatana-appindicator3-dev \
            librsvg2-dev \
            patchelf \
            sqlite3
      - name: Install Node dependencies
        run: npm ci
      - name: Generate benchmark fixtures
        run: |
          set -euxo pipefail
          node --loader ts-node/esm scripts/bench/generate_backfill_fixture.ts --rows 1000
      - name: Run backfill benchmark smoke test
        working-directory: src-tauri
        run: |
          set -euxo pipefail
          cargo run --locked --bin time -- backfill-bench --rows 1000 --chunk-size 500 --progress-interval 0

  gate_drop_legacy_evidence:
    name: gate/drop-legacy-evidence
    runs-on: ubuntu-latest
    needs: [lint, unit]
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - uses: Swatinem/rust-cache@v2
        with:
          workspaces: |
            src-tauri
      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            python3 \
            sqlite3
      - name: Refresh drop-legacy evidence
        run: scripts/ci/refresh-drop-legacy-evidence.sh
      - name: Validate evidence outputs
        run: |
          set -euxo pipefail
          test -s docs/evidence/drop-legacy/schema-before.sha256 -a -s docs/evidence/drop-legacy/schema-after.sha256
          grep -F "sqlite_integrity_check" docs/evidence/drop-legacy/migration-pass.log
          grep -F "Migration 0023 blocked:" docs/evidence/drop-legacy/migration-fail.log
      - name: Ensure evidence bundle is current
        run: git diff --exit-code docs/evidence/drop-legacy

  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
      - run: npm ci
      - run: npm run lint

  unit:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
      - run: npm ci
      - run: npm test

  licensing_inventory:
    name: licensing/inventory
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
      - run: npm ci
      - name: Generate cross-ecosystem license inventory
        run: npm run licensing:inventory
      - name: Upload inventory artifacts
        uses: actions/upload-artifact@v4
        with:
          name: licensing-inventory
          path: artifacts/licensing
          if-no-files-found: error

