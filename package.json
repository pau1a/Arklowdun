{
  "name": "arklowdun",
  "private": true,
  "version": "0.1.0",
  "type": "module",
  "scripts": {
    "dev": "vite",
    "build": "tsc && vite build",
    "preview": "vite preview",
    "tauri": "tauri",
    "bench:gen": "node --loader ts-node/esm scripts/bench/generate_backfill_fixture.ts",
    "bench:query:gen": "node --loader ts-node/esm scripts/bench/generate_query_fixture.ts",
    "bench:query:smoke": "node --loader ts-node/esm scripts/bench/generate_query_fixture.ts --rows 1000 && cd src-tauri && cargo run --locked --bin time -- query-bench --rows 1000 --iterations 10 --warmup 2 --window day --window week --window month",
    "bench:smoke": "cd src-tauri && cargo run --locked --bin time -- backfill-bench --rows 1000 --chunk-size 500 --progress-interval 0",
    "migrate:checksum": "node --loader ts-node/esm scripts/migrate-checksum.ts",
    "fixtures:seed": "node --loader ts-node/esm fixtures/large/seed.ts",
    "fixtures:verify": "node scripts/ci/verify-large-fixture.mjs",
    "fixtures:update": "node scripts/ci/update-large-fixture-snapshots.mjs",
    "migrate:batch1": "node --loader ts-node/esm src/tools/migrate-batch1.ts",
    "check:household": "bash scripts/check-household-scope.sh",
    "test": "node --import ./scripts/test-preload.mjs --test tests/*.ts tests/*.js",
    "test:e2e": "playwright test tests/ui/*.spec.ts",
    "test:a11y": "playwright test tests/a11y/*.spec.ts",
    "test:contracts": "node --import ./scripts/test-preload.mjs --test tests/contracts/*.spec.ts",
    "test:parity": "node --import ./scripts/test-preload.mjs --test tests/contracts/ipc-contracts.spec.ts",
    "dev:fake": "VITE_IPC_ADAPTER=fake VITE_IPC_SCENARIO=defaultHousehold vite",
    "lint:rs": "cargo clippy --manifest-path src-tauri/Cargo.toml --lib --bins --examples --all-features -- -D clippy::unwrap_used -D clippy::expect_used && cargo clippy --manifest-path src-tauri/Cargo.toml --all-targets --all-features",
    "gen:models": "cargo test --no-default-features --manifest-path src-tauri/Cargo.toml",
    "check:models": "npm run gen:models && git diff --exit-code -- src/bindings",
    "check:attachment-categories": "npm run gen:models && git diff --exit-code -- src/bindings/AttachmentCategory.ts",
    "typecheck": "tsc -p tsconfig.json --noEmit",
    "guard:invoke": "bash scripts/guards/no-direct-invoke.sh",
    "guard:ui-colors": "bash scripts/guards/no-ui-color-literals.sh",
    "guard:db-writes": "node scripts/guards/require-db-write-guard.mjs",
    "guard:recovery-strings": "bash scripts/check_strings.sh",
    "guard:asset-attribution": "tsx scripts/licensing/validate-asset-attribution.ts",
    "guard:copyleft-audit": "node scripts/licensing/require-current-copyleft-audit.mjs",
    "gate:ipc-in-components": "node scripts/guards/gate-ipc-in-components.mjs",
    "gate:no-deep-relatives": "node scripts/guards/gate-no-deep-relatives.mjs",
    "gate:cross-feature-report": "node scripts/guards/gate-cross-feature-report.mjs",
    "gate:query-perf-smoke": "node scripts/ci/query-perf-smoke.mjs",
    "gate:recurrence-perf": "node scripts/ci/recurrence-perf-budget.mjs",
    "perf:query:local": "node scripts/ci/query-perf-local.mjs",
    "gate:scan": "npm run gate:ipc-in-components && npm run gate:no-deep-relatives && npm run gate:cross-feature-report",
    "licensing:inventory": "tsx scripts/licensing/pipeline.ts",
    "generate:notice": "node scripts/licensing/run-generate-notice.mjs",
    "lint": "eslint . --ext .ts,.tsx,.js,.jsx",
    "lint:structure": "node scripts/guards/structure-lint.mjs",
    "check": "npm run typecheck && echo TS OK && npm run lint && npm run guard:invoke && npm run guard:ui-colors && npm run guard:db-writes && npm run guard:recovery-strings && npm run guard:asset-attribution && npm run lint:structure",
    "dev:seed": "VITE_ENV=development node --loader ts-node/esm scripts/dev/seed.ts",
    "dev:profile": "VITE_ENV=development node --loader ts-node/esm scripts/dev/seed.ts --profile",
    "test:coverage": "vitest run --coverage",
    "cov:rs": "node scripts/cov-rs.mjs",
    "cov:all": "npm run test:coverage && npm run cov:rs",
    "check:plugin-fs": "node scripts/guards/check-plugin-fs-usage.mjs",
    "check:sqlx-macros": "bash scripts/guards/no-sqlx-macros.sh",
    "check-all": "npm run check:plugin-fs && npm run check:sqlx-macros",
    "smoke:security": "bash scripts/security-smoke.sh",
    "smoke:household": "bash scripts/ci/household-default-smoke.sh",
    "smoke:household:lifecycle": "bash scripts/ci/household-lifecycle-smoke.sh",
    "smoke:security:win": "powershell -ExecutionPolicy Bypass -File ./scripts/security-smoke.ps1",
    "check:migrations": "bash scripts/check_migrations.sh",
    "migrate:new": "bash scripts/new_migration.sh",
    "migrations:check": "bash scripts/check_migrations.sh",
    "migrations:idempotency": "bash scripts/test_idempotency.sh",
    "migrations:idempotency:keep": "bash scripts/test_idempotency.sh --keep",
    "schema:verify": "bash scripts/verify_schema.sh --db dev.sqlite --schema schema.sql --include-migrations --verbose",
    "schema:update": "bash scripts/verify_schema.sh --db dev.sqlite --schema schema.sql --include-migrations --update --verbose",
    "schema:verify:strict": "bash scripts/verify_schema.sh --db dev.sqlite --schema schema.sql --strict --include-migrations --verbose",
    "schema:ci": "bash scripts/ci/verify-schema.sh",
    "release": "npm run guard:copyleft-audit && npm run check:plugin-fs && npm run schema:update && DB=dev.sqlite bash scripts/check_pending_migrations.sh && npm run tauri -- build",
    "test:node": "tsx --test"
  },
  "dependencies": {
    "@fortawesome/fontawesome-free": "^6.7.2",
    "@tauri-apps/api": "^2",
    "@tauri-apps/plugin-clipboard-manager": "^2",
    "@tauri-apps/plugin-dialog": "^2",
    "@tauri-apps/plugin-fs": "^2",
    "@tauri-apps/plugin-notification": "^2",
    "@tauri-apps/plugin-opener": "^2",
    "@tauri-apps/plugin-sql": "^2.3.0",
    "@tauri-apps/plugin-store": "^2.4.0",
    "better-sqlite3": "^12.2.0",
    "zod": "^3.25.76"
  },
  "devDependencies": {
    "@axe-core/playwright": "^4.10.0",
    "@iarna/toml": "^2.2.5",
    "@playwright/test": "^1.49.0",
    "@tauri-apps/cli": "^2.8.3",
    "@types/better-sqlite3": "^7.6.13",
    "@types/jsdom": "^21.1.7",
    "@typescript-eslint/eslint-plugin": "^8.44.0",
    "@typescript-eslint/parser": "^8.44.0",
    "@vitest/coverage-v8": "^1.6.0",
    "ajv": "^8.17.1",
    "ajv-formats": "^3.0.1",
    "eslint": "^8.57.1",
    "eslint-plugin-import": "^2.32.0",
    "eslint-plugin-jsx-a11y": "^6.10.2",
    "eslint-plugin-security": "^2.1.1",
    "eslint-plugin-unused-imports": "^4.2.0",
    "jsdom": "^26.1.0",
    "sass-embedded": "^1.81.0",
    "spdx-expression-parse": "^4.0.0",
    "ts-node": "^10.9.2",
    "tsconfig-paths": "^4.2.0",
    "tsx": "^4.20.5",
    "typescript": "^5.9.2",
    "vite": "^6.0.3",
    "vitest": "^1.6.0",
    "yaml": "^2.8.1"
  }
}
